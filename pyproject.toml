[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "anymouse"
description = "Stateless anonymization service for sensitive data"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Anymouse Team", email = "team@anymouse.dev"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Healthcare Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "boto3",
    "pydantic>=2.0",
    "spacy>=3.4.0",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov",
    "pytest-asyncio",
    "black",
    "isort",
    "flake8",
    "mypy",
    "bandit",
    "safety",
    "moto[s3,ssm,lambda,apigateway]",
]
test = [
    "pytest>=7.0",
    "pytest-cov",
    "moto[s3,ssm,lambda,apigateway]",
    "requests",
]
performance = [
    "aiohttp",
    "pandas",
    "matplotlib",
    "psutil",
]

[project.urls]
Homepage = "https://github.com/your-org/anymouse"
Documentation = "https://anymouse.readthedocs.io"
Repository = "https://github.com/your-org/anymouse"
Issues = "https://github.com/your-org/anymouse/issues"

[tool.setuptools_scm]
write_to = "anymouse/_version.py"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["anymouse"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "spacy.*",
    "boto3.*",
    "botocore.*",
    "moto.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "integration: marks tests as integration tests (may require AWS credentials)",
    "performance: marks tests as performance tests (may take longer to run)",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["anymouse"]
omit = [
    "anymouse/_version.py",
    "tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]  # Skip test assertions and shell usage

[tool.bandit.assert_used]
skips = ["*_test.py", "*/test_*.py"]